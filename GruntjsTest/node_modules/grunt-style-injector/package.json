{
  "name": "grunt-style-injector",
  "description": "Inject CSS into multiple browsers without reloading the page. Full browser support (back to IE7).",
  "version": "0.1.9",
  "homepage": "https://github.com/shakyshane/grunt-style-injector",
  "author": {
    "name": "Shane Osbourne"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shakyshane/grunt-style-injector.git"
  },
  "bugs": {
    "url": "https://github.com/shakyshane/grunt-style-injector/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shakyshane/grunt-style-injector/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-uglify": "~0.2.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1",
    "portscanner": "~0.1.3",
    "path": "*",
    "url": "*",
    "open": "*",
    "async": "~0.2.9",
    "chokidar": "~0.6.2",
    "lodash": "~1.3.1",
    "cli-color": "~0.2.2",
    "socket.io": "~0.9.16",
    "connect": "~2.8.4",
    "grunt-contrib-watch": "~0.5.1",
    "ua-parser-js": "~0.6.2"
  },
  "keywords": [
    "gruntplugin",
    "live reload",
    "inject styles",
    "style injector",
    "auto refresh"
  ],
  "readme": "# grunt-style-injector\n\n> A live-reload alternative with support for legacy IE browsers.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\n\n##About\n**Live CSS-injecting with NO page refresh**\n\nThis plugin gives you live style-injecting into all browsers. It also provides live-reloading of files that cannot be injected (php, html etc). I was inspired to build this because the popular live-reload plugin does not work with IE 7 & 8. *This one does!*\n\nIt can also be used in **Ghost-Mode** where all connected broswers/devices will try to keep in sync. Ghost-Mode currently supports three options:\n\n**links** - When you click a link in one browser (say, Chrome on desktop), all of the other browsers you have open will navigate to the same link.\n\n**scroll** - When you scroll a website in one browser, all the others will follow suit. (very useful when developing with multiple monitors/devices )\n\n**forms** - When you fill out a form, all connected browsers will populate their forms with what you type in real-time. (currently working for\ntext-inputs, textareas, selects, radios & checkboxes)\n\n\n##Install\n\n\n```shell\nnpm install grunt-style-injector --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-style-injector');\n```\n##Config\nHere's an example of the simplest configuration possible. This will give you a HTML snippet to paste into your website & will you allow you to work with any server setup (such as MAMP,  WAMP or anything else). So if you are working on a Wordpress website, for example, this is the option for you.\n\n```\nstyleinjector: {\n    files: {\n        src : 'assets/css/style.css'\n    },\n},\n```\n## with Connect Server\nIf you want the zero-effort version, just include the `server` option and provide the base directory to your public files. Using this option does NOT require the HTML snippet as the Style Injector will inject it automatically into the pages it serves for you.\n\n```\nstyleinjector: {\n    files: {\n        src : 'assets/css/style.css'\n    },\n    options: {\n    \tserver: {\n    \t\tbaseDir: \"app\"\n    \t}\n    }\n},\n```\n\n##Run\n\n`grunt styleinjector`\n\nWhen you've used one of the configs from above, run this command from the terminal and you'll be good to go (if you are using the built-in server). If you are not using the built in server, (because your site is on PHP or something else), just grab the HTML snippet from the command line and paste it into your site just before the closing `</body` tag\n\n##Options\n\nHere's another example config with options, each will be explained after.\n\n```js\nstyleinjector: {\n    files: {\n        src : 'assets/css/style.css'\n    },\n    options: {\n        watchTask: false,\n        debugInfo: true,\n        host: \"192.168.0.7\",\n        server: {\n        \tbaseDir: \"app\"\n        }\n    },\n},\n```\n###watchTask (default: *false*)\nStyle-Injector is not a replacement for regular `watch` tasks (such as compiling SASS, LESS etc), they are designed to be used together. If you intend to do this, set this option to true and be sure to call the `watch` task AFTER `styleinjector`. For example, to compile SASS and then inject the CSS into all open browsers (without a page refresh), your config for all three tasks might look something like this:\n\n\n```js\nmodule.exports = function (grunt) {\n    grunt.initConfig({\n        watch: {\n            files: \"assets/scss/**/*.scss\",\n            tasks: ['compass'],\n        },\n        compass: {\n            dist: {\n                options: {\n                    sassDir: 'assets/scss',\n                    cssDir: 'assets/css',\n                    outputStyle: 'compressed',\n                },\n            },\n        },\n        styleinjector: {\n            files: {\n                src : 'assets/css/*.css',\n            },\n            options: {\n                watchTask: true,\n            },\n        },\n    });\n\n    // load npm tasks\n    grunt.loadNpmTasks('grunt-contrib-compass');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-style-injector');\n\n    // create custom task-list\n    grunt.registerTask('default', [\"styleinjector\", \"watch\"]);\n};\n```\n\n###debugInfo (default: *true*)\nBy default, the task will inform you when a file has been changed & when browsers are connected. This can sometimes cause a lot of output to the console and if you don't want that, set this option to false.\n\n```js\ngrunt.initConfig({\n    styleinjector: {\n        files: {\n            src : 'app/assets/css/*.css',\n        },\n    },\n});\n\n// Needed because the CSS file url will probably look like this in the DOM.\n// <link rel=\"stylesheet\" href=\"/assets/css/style.css\"/>\n```\n\n###host (default: *null*)\nStyle-Injector will attempt to figure out the correct external IP to use on your network. Ocassionally though, it may select\none that cannot be accessed on any other devices (just the machine you are developing on). If this happens, and you know exactly\nwhich IP to use on your network, you can plug it in here.\n\nFor example:\n\n```js\ngrunt.initConfig({\n    styleinjector: {\n        files: {\n            src : 'app/assets/css/*.css',\n        },\n        options: {\n            host : \"192.168.0.1\"\n        },\n    },\n});\n```\n> A quick word on hosts...\nThe power of Style-Injector comes when you have multiple devices/browsers connected. To do this, you use your networks IP instead of `localhost`. For example, you may have a php/node/mamp server running at `localhost:8000`. Swap out the localhost part for something like `192.168.0.1` (find yours by running `ifconfig` on Mac, `ipconfig` on Windows) and you can connect to **192.168.0.1:8000**. Now, with Style-Injector running, you can have as many browsers/devices connected and they will all live-update when you change a file.\n\n###ghostMode (default: *false*) **Experimental**\nThere are currently three options for **ghostMode** `scroll`, `links` & `forms`\n\n- Scroll. Enable this and your connected browsers will attempt to keep in sync\n- Links. Enable this and your connected browsers will follow each other around. (note: this could be problematic if you already have click events\non `<a>` elements. It's designed to just make it easy to view multiple pages in the same site and have all browsers keep in sync while in development.\n- Forms Enable this and your connected browsers will keep all form inputs in sync\n\n```js\ngrunt.initConfig({\n    styleinjector: {\n        files: {\n            src : 'app/assets/css/*.css',\n        },\n        options: {\n            host : \"192.168.0.1\",\n            ghostMode: {\n                scroll: true,\n                links: true,\n                forms: true\n            }\n        },\n    },\n});\n```\n###server (default: *false*)\nUsing the `server` option negates the need for the HTML snippet as it will be injected automatically (no browser plugins needed!). Just provide the base directory where you want to serve your files from and you'll be good to go!.\n\n```js\ngrunt.initConfig({\n    styleinjector: {\n        files: {\n            src : 'app/assets/css/*.css',\n        },\n        options: {\n            host : \"192.168.0.1\",\n\t\t\tserver: {\n        \t\tbaseDir: \"app\"\n        \t}\n        },\n    },\n});\n```\n\n##Live Reload\nStyle-Injector will, as the name implies, inject CSS into all connected browsers without reloading the page. It even works on VMs running IE 7 & 8! But that's not all it does. It can also live-inject jpg & png files too, as well as perform a hard refresh for JS, PHP, HTML files etc. For example:\n\n```js\ngrunt.initConfig({\n    styleinjector: {\n        files: {\n            src : [\n                'assets/css/*.css',\n                'assets/img/**/*.jpg',\n                'assets/img/**/*.png',\n                'assets/js/**/*.js',\n                '**/*.php',\n                '**/*.html',\n            ],\n        },\n    },\n});\n```\n\n###Support\nPlease contact me (raise an issue) if you have any problems getting up and running with this. I'll be happy to help :)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.1.0 - initial release\n0.1.1 - Bug fixes release\n0.1.3 - Added initial implentation of Ghost-mode (link)\n0.1.4 - refined ghost-mode and added scroll\n0.1.6 - Added Built-in server with middleware for injecting snippet\n0.1.7 - Added 'open' for automatically opening browser when 'server' option is used.",
  "readmeFilename": "README.md",
  "_id": "grunt-style-injector@0.1.9",
  "dist": {
    "shasum": "af99052f05baa0df1f97a081a6ab7882676b11ce"
  },
  "deprecated": "This project is now 'https://npmjs.org/package/grunt-browser-sync'",
  "_from": "grunt-style-injector@",
  "_resolved": "https://registry.npmjs.org/grunt-style-injector/-/grunt-style-injector-0.1.9.tgz"
}
